<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <title>Sala <%= roomId %></title>
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <!-- Bootstrap 5 CSS -->
  <link
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
    rel="stylesheet"
  >
  <script src="/socket.io/socket.io.js"></script>
</head>
<body class="bg-light">

  <div class="container py-5">
    <div class="row justify-content-center">
      <div class="col-md-8 col-lg-6">
        <div class="card shadow rounded-4">
          <div class="card-body text-center">
            <h2 class="card-title mb-4">🕵️ Sala: <strong><%= roomId %></strong></h2>

            <!-- Botão copiar link -->
            <div class="mb-3">
              <button id="copyLinkBtn" class="btn btn-outline-secondary btn-sm">
                🔗 Copiar link da sala
              </button>
              <span id="copyStatus" class="ms-2 text-success fw-bold" style="display: none;">Copiado!</span>
            </div>

            <ul id="players" class="list-group mb-4 text-start"></ul>

            <!-- Botões lado a lado -->
            <div class="d-flex justify-content-center gap-2 mb-3 flex-wrap">
              <button id="readyBtn" class="btn btn-success">Pronto</button>
              <button id="startBtn" class="btn btn-primary" style="display: none;">Iniciar Jogo</button>
              <button id="reshuffleBtn" class="btn btn-warning" style="display: none;">🔄 Sortear novamente</button>
            </div>

            <!-- Papel e local -->
            <div id="roleInfo" class="alert alert-info fw-bold" style="white-space: pre-line; display: none;"></div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    const socket = io();
    const roomId = '<%= roomId %>';
    const playersEl = document.getElementById('players');
    const startBtn = document.getElementById('startBtn');
    const readyBtn = document.getElementById('readyBtn');
    const roleInfo = document.getElementById('roleInfo');
    const copyBtn = document.getElementById('copyLinkBtn');
    const copyStatus = document.getElementById('copyStatus');

    socket.emit('join-room', roomId);

    readyBtn.onclick = () => {
      socket.emit('player-ready', roomId);
      readyBtn.disabled = true;
      readyBtn.innerText = 'Aguardando...';
    };

    startBtn.onclick = () => {
      socket.emit('start-game', roomId);
    };

    socket.on('players-updated', ({ players, ready, allReady }) => {
      playersEl.innerHTML = players.map(p => {
        const isYou = p === socket.id ? ' (você)' : '';
        const isReady = ready[p] ? '✅' : '⏳';
        return `<li class="list-group-item d-flex justify-content-between align-items-center">
                  ${p}${isYou}
                  <span>${isReady}</span>
                </li>`;
      }).join('');

      startBtn.style.display = allReady ? 'inline-block' : 'none';
    });

    socket.on('game-started', () => {
      readyBtn.style.display = 'none';
      startBtn.style.display = 'none';
      reshuffleBtn.style.display = 'inline-block';
      reshuffleBtn.disabled = false;
      reshuffleBtn.innerText = '🔄 Sortear novamente';
    });

    reshuffleBtn.onclick = () => {
      socket.emit('request-reshuffle', roomId);
      reshuffleBtn.disabled = true;
      reshuffleBtn.innerText = 'Aguardando...';
    };

    socket.on('role-assigned', ({ role, location }) => {
      roleInfo.style.display = 'block';

      if (role === 'spy') {
        roleInfo.innerText = '🕵️ Você é o ESPIÃO.\nDescubra o local!';
        roleInfo.classList.replace('alert-info', 'alert-warning');
      } else {
        roleInfo.innerText = `📍 Local: ${location}\n🎭 Papel: ${role}`;
        roleInfo.classList.replace('alert-warning', 'alert-info');
      }
    });

    // Copiar link da sala
    copyBtn.onclick = () => {
      const link = `${window.location.origin}/${roomId}`;
      navigator.clipboard.writeText(link).then(() => {
        copyStatus.style.display = 'inline';
        setTimeout(() => copyStatus.style.display = 'none', 2000);
      });
    };
  </script>

</body>
</html>
